/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
.invisible {
  visibility: hidden;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.top-full {
  top: 100%;
}
.z-50 {
  z-index: 50;
}
.mx-auto {
  margin-inline: auto;
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.h-\[400px\] {
  height: 400px;
}
.max-h-\[90vh\] {
  max-height: 90vh;
}
.min-h-screen {
  min-height: 100vh;
}
.w-full {
  width: 100%;
}
.w-max {
  width: max-content;
}
.max-w-\[280px\] {
  max-width: 280px;
}
.min-w-\[280px\] {
  min-width: 280px;
}
.min-w-full {
  min-width: 100%;
}
.flex-1 {
  flex: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-grow {
  flex-grow: 1;
}
.-translate-y-1\/2 {
  --tw-translate-y: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.cursor-pointer {
  cursor: pointer;
}
.list-decimal {
  list-style-type: decimal;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-l {
  border-left-style: var(--tw-border-style);
  border-left-width: 1px;
}
.border-\[\#0FF6FF\] {
  border-color: #0FF6FF;
}
.border-\[\#9E00FF\] {
  border-color: #9E00FF;
}
.border-\[color\:var\(--primary\)\] {
  border-color: var(--primary);
}
.bg-\[\#0A192F\] {
  background-color: #0A192F;
}
.bg-\[\#0D1117\] {
  background-color: #0D1117;
}
.bg-\[\#0F172A\] {
  background-color: #0F172A;
}
.bg-\[\#0FF6FF\] {
  background-color: #0FF6FF;
}
.bg-\[\#00FFA3\] {
  background-color: #00FFA3;
}
.bg-\[\#1E1E2F\] {
  background-color: #1E1E2F;
}
.bg-\[\#1E293B\] {
  background-color: #1E293B;
}
.bg-\[\#2c2c2c\] {
  background-color: #2c2c2c;
}
.bg-\[\#2c2c2c\]\/70 {
  background-color: color-mix(in oklab, #2c2c2c 70%, transparent);
}
.bg-\[\#8A2BE2\] {
  background-color: #8A2BE2;
}
.bg-\[\#9E00FF\] {
  background-color: #9E00FF;
}
.bg-\[\#112240\] {
  background-color: #112240;
}
.bg-\[color\:var\(--bg-dark\)\] {
  background-color: var(--bg-dark);
}
.bg-\[color\:var\(--panel\)\] {
  background-color: var(--panel);
}
.bg-\[color\:var\(--primary\)\] {
  background-color: var(--primary);
}
.bg-\[var\(--primary\)\] {
  background-color: var(--primary);
}
.bg-\[var\(--secondary\)\] {
  background-color: var(--secondary);
}
.bg-transparent {
  background-color: transparent;
}
.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.fill-current {
  fill: currentcolor;
}
.object-contain {
  object-fit: contain;
}
.object-cover {
  object-fit: cover;
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.leading-none {
  --tw-leading: 1;
  line-height: 1;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.whitespace-pre-wrap {
  white-space: pre-wrap;
}
.text-\[\#0D1117\] {
  color: #0D1117;
}
.text-\[\#0FF6FF\] {
  color: #0FF6FF;
}
.text-\[\#00FFA3\] {
  color: #00FFA3;
}
.text-\[\#9E00FF\] {
  color: #9E00FF;
}
.text-\[\#EDEDED\] {
  color: #EDEDED;
}
.text-\[color\:var\(--highlight\)\] {
  color: var(--highlight);
}
.text-\[color\:var\(--primary\)\] {
  color: var(--primary);
}
.text-\[color\:var\(--text\)\] {
  color: var(--text);
}
.text-\[var\(--highlight\)\] {
  color: var(--highlight);
}
.text-\[var\(--primary\)\] {
  color: var(--primary);
}
.text-\[var\(--text\)\] {
  color: var(--text);
}
.text-\[var\(--text-muted\)\] {
  color: var(--text-muted);
}
.uppercase {
  text-transform: uppercase;
}
.italic {
  font-style: italic;
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.duration-500 {
  --tw-duration: 500ms;
  transition-duration: 500ms;
}
.select-none {
  -webkit-user-select: none;
  user-select: none;
}
.group-open\:rotate-180 {
  &:is(:where(.group):is([open], :popover-open, :open) *) {
    rotate: 180deg;
  }
}
.group-hover\:flex {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      display: flex;
    }
  }
}
.hover\:scale-105 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:bg-\[\#00c2c2\] {
  &:hover {
    @media (hover: hover) {
      background-color: #00c2c2;
    }
  }
}
.hover\:bg-\[\#00cfd1\] {
  &:hover {
    @media (hover: hover) {
      background-color: #00cfd1;
    }
  }
}
.hover\:bg-\[\#7a00cc\] {
  &:hover {
    @media (hover: hover) {
      background-color: #7a00cc;
    }
  }
}
.hover\:bg-\[\#19202a\] {
  &:hover {
    @media (hover: hover) {
      background-color: #19202a;
    }
  }
}
.hover\:bg-\[\#111827\] {
  &:hover {
    @media (hover: hover) {
      background-color: #111827;
    }
  }
}
.hover\:bg-\[\#A24BE2\] {
  &:hover {
    @media (hover: hover) {
      background-color: #A24BE2;
    }
  }
}
.hover\:bg-\[color\:var\(--highlight\)\] {
  &:hover {
    @media (hover: hover) {
      background-color: var(--highlight);
    }
  }
}
.hover\:text-\[\#0D1117\] {
  &:hover {
    @media (hover: hover) {
      color: #0D1117;
    }
  }
}
.hover\:text-\[\#00FFA3\] {
  &:hover {
    @media (hover: hover) {
      color: #00FFA3;
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.hover\:opacity-80 {
  &:hover {
    @media (hover: hover) {
      opacity: 80%;
    }
  }
}
.hover\:opacity-90 {
  &:hover {
    @media (hover: hover) {
      opacity: 90%;
    }
  }
}
.hover\:brightness-110 {
  &:hover {
    @media (hover: hover) {
      --tw-brightness: brightness(110%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-\[\#0FF6FF\] {
  &:focus {
    --tw-ring-color: #0FF6FF;
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
